{"ast":null,"code":"import _objectSpread from \"/Users/aado29/Documents/Projects/ml-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_PHRASE, SEARCH_DATA, SEARCH_DATA_ERROR, SEARCH_DATA_SUCCESS } from './../actions/search';\nvar initialState = {\n  searchPhrase: '',\n  isLoading: false,\n  hasError: false,\n  error: null,\n  data: []\n};\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PHRASE:\n      return _objectSpread({}, state, {\n        searchPhrase: action.payload\n      });\n\n    case SEARCH_DATA:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        hasError: false,\n        error: null\n      });\n\n    case SEARCH_DATA_ERROR:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        hasError: true,\n        error: action.payload\n      });\n\n    case SEARCH_DATA_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        data: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/aado29/Documents/Projects/ml-test/client/src/reducers/search.js"],"names":["SET_PHRASE","SEARCH_DATA","SEARCH_DATA_ERROR","SEARCH_DATA_SUCCESS","initialState","searchPhrase","isLoading","hasError","error","data","todos","state","action","type","payload"],"mappings":";AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,mBAJF,QAKO,qBALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,KAAK,EAAE,IAJY;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,UAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,YAAY,EAAEO,MAAM,CAACE;AAFvB;;AAIF,SAAKb,WAAL;AACE,+BACKU,KADL;AAEEL,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKN,iBAAL;AACE,+BACKS,KADL;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAJhB;;AAMF,SAAKX,mBAAL;AACE,+BACKQ,KADL;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEG,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAHf;;AAKF;AACE,aAAOH,KAAP;AA3BJ;;AA4BC;AACF,CA9BD;;AAgCA,eAAeD,KAAf","sourcesContent":["import {\n  SET_PHRASE,\n  SEARCH_DATA,\n  SEARCH_DATA_ERROR,\n  SEARCH_DATA_SUCCESS,\n} from './../actions/search';\n\nconst initialState = {\n  searchPhrase: '',\n  isLoading: false,\n  hasError: false,\n  error: null,\n  data: [],\n};\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PHRASE:\n      return {\n        ...state,\n        searchPhrase: action.payload\n      };\n    case SEARCH_DATA:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case SEARCH_DATA_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case SEARCH_DATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    default:\n      return state;\n  };\n};\n\nexport default todos;"]},"metadata":{},"sourceType":"module"}