{"ast":null,"code":"import searchService from './../services/search';\nexport var SET_PHRASE = \"SET_PHRASE\";\nexport var SEARCH_DATA = \"SEARCH_DATA\";\nexport var SEARCH_DATA_ERROR = \"SEARCH_DATA_ERROR\";\nexport var SEARCH_DATA_SUCCESS = \"SEARCH_DATA_SUCCESS\";\n\nvar searchRequest = function searchRequest() {\n  return {\n    type: SEARCH_DATA\n  };\n};\n\nvar searchError = function searchError(err) {\n  return {\n    type: SEARCH_DATA_ERROR,\n    payload: err\n  };\n};\n\nvar searchSuccess = function searchSuccess(payload) {\n  return {\n    type: SEARCH_DATA_SUCCESS,\n    payload: payload\n  };\n};\n\nexport var search = function search() {\n  return function (dispatch, getState) {\n    dispatch(searchRequest());\n    searchService(getState().search.searchPhrase).then(function (items) {\n      return dispatch(searchSuccess(items));\n    }).catch(function (err) {\n      return dispatch(searchError(err));\n    });\n  };\n};\nexport var setPhrase = function setPhrase(phrase) {\n  return {\n    type: SET_PHRASE,\n    payload: phrase\n  };\n};","map":{"version":3,"sources":["/Users/aado29/Documents/Projects/ml-test/client/src/actions/search.js"],"names":["searchService","SET_PHRASE","SEARCH_DATA","SEARCH_DATA_ERROR","SEARCH_DATA_SUCCESS","searchRequest","type","searchError","err","payload","searchSuccess","search","dispatch","getState","searchPhrase","then","items","catch","setPhrase","phrase"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AAEA,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEH,iBADD;AAELM,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACD,OAAD,EAAa;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEF,mBADD;AAELK,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACAL,IAAAA,aAAa,CAACa,QAAQ,GAAGF,MAAX,CAAkBG,YAAnB,CAAb,CACGC,IADH,CACQ,UAAAC,KAAK;AAAA,aAAIJ,QAAQ,CAACF,aAAa,CAACM,KAAD,CAAd,CAAZ;AAAA,KADb,EAEGC,KAFH,CAES,UAAAT,GAAG;AAAA,aAAII,QAAQ,CAACL,WAAW,CAACC,GAAD,CAAZ,CAAZ;AAAA,KAFZ;AAGD,GALD;AAMD,CAPM;AASP,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AACnC,SAAO;AACLb,IAAAA,IAAI,EAAEL,UADD;AAELQ,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM","sourcesContent":["import searchService from './../services/search';\n\nexport const SET_PHRASE = \"SET_PHRASE\";\nexport const SEARCH_DATA = \"SEARCH_DATA\";\nexport const SEARCH_DATA_ERROR = \"SEARCH_DATA_ERROR\";\nexport const SEARCH_DATA_SUCCESS = \"SEARCH_DATA_SUCCESS\";\n\nconst searchRequest = () => {\n  return {\n    type: SEARCH_DATA\n  }\n}\n\nconst searchError = (err) => {\n  return {\n    type: SEARCH_DATA_ERROR,\n    payload: err\n  }\n}\n\nconst searchSuccess = (payload) => {\n  return {\n    type: SEARCH_DATA_SUCCESS,\n    payload\n  }\n}\n\nexport const search = () => {\n  return (dispatch, getState) => {\n    dispatch(searchRequest());\n    searchService(getState().search.searchPhrase)\n      .then(items => dispatch(searchSuccess(items)))\n      .catch(err => dispatch(searchError(err)))\n  }\n}\n\nexport const setPhrase = (phrase) => {\n  return {\n    type: SET_PHRASE,\n    payload: phrase,\n  };\n};"]},"metadata":{},"sourceType":"module"}